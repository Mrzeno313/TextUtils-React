{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","innerText","setTimeout","navigator","clipboard","writeText","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3d63ed5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React,{useState} from 'react'\r\n\r\n \r\nexport default function Textform(props) {\r\n  \r\n      const HandelUpClick = () =>\r\n      {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n      }\r\n\r\n      const HandelLowClick = () =>\r\n      {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n      }\r\n\r\n      const HandelClearClick = () =>\r\n      {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = ''; \r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n      }\r\n\r\n      const handelonchange = (event) =>\r\n      {\r\n        // console.log(\"Uppercase was OnChange\");\r\n        setText(event.target.value);\r\n      }\r\n\r\n      const HandelCopy = () => \r\n      {\r\n        document.getElementById(\"mybox\").innerText = \"copied\";\r\n        setTimeout(() => {\r\n          document.getElementById(\"mybox\").innerText = \"Copy Text\";\r\n        });\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n      }\r\n\r\n      const HandelExtraSpace = () =>\r\n       {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n      }\r\n\r\n      const [text, setText] = useState('');\r\n\r\n  return (\r\n     <>\r\n        <div className='container'  style={{color: props.mode ==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading} </h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handelonchange}  style={{backgroundColor: props.mode ==='dark'?'#13466e':'white', color: props.mode ==='dark'?'white':'#042743'}}\r\n                 id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={HandelUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={HandelLowClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={HandelExtraSpace}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={HandelClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={HandelCopy}>Copy Text</button>\r\n            \r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode ==='dark'?'white':'#042743'}}>\r\n\r\n          <h2>Your text summary</h2>\r\n          <p>{text.split(\" \").length} word and {text.length} characters</p> \r\n          <p>{0.008 * text.split(\" \").length} Minutes read </p> \r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n\r\n        </div>\r\n        \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toLowerCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n\r\n      props.alert &&  // to check null\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n             <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" \r\n            aria-label=\"Close\"></button>\r\n      </div>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport Alert from './Components/Alert';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n// Dark mode\n  const [mode, setMode] = useState('light');\n  \n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n// Alert\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n     setAlert({\n      msg: message,\n      type:type\n     })\n     setTimeout(() => {\n      setAlert(null); \n     },1000\n     );\n  }\n\n\n  return (\n    <>\n    {/* <Router> */}\n\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode ={toggleMode}></Navbar>\n\n    <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n\n        <Textform  showAlert={showAlert} heading=\"Enter the text\" mode={mode} />\n\n            {/* <Routes>\n                  <Route path=\"/about\" element={<About/>} />\n                  <Route path=\"/\" element={} />\n            </Routes> */}\n            \n        </div>\n\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}